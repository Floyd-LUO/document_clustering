{
  "name": "Document Clustering with Python",
  "tagline": "text mining, clustering, and visualization ",
  "body": "## Document Clustering with Python\r\n\r\nThis is my revision of the great tutorial at http://brandonrose.org/clustering - many thanks to the author.\r\n\r\n## TL;DR\r\n**Data**: Top 100 movies (http://www.imdb.com/list/ls055592025/) with title, genre, and synopsis (IMDB and Wiki)\r\n\r\n**Goal**: Put 100 movies into 5 clusters by text-mining their synopses and plot the result as follows\r\n\r\n<img width=\"771\" alt=\"screenshot 2016-05-23 20 50 20\" src=\"https://cloud.githubusercontent.com/assets/595772/15488829/5b863710-2128-11e6-843b-25aac76bd134.png\">\r\n\r\n## Setup\r\n\r\nFirst, setup the virtual environment and install the required packages:\r\n\r\n```\r\nvirtualenv venv\r\nsource venv/bin/activate\r\npip install -r requirements.txt\r\nipython2 notebook\r\n```\r\nSecond, use nltk.download() to download all nltk packages, which are saved to /Users/harrywang/nltk_data\r\n\r\n```\r\nipython2\r\nimport nltk\r\nnltk.download()\r\n```\r\n\r\nLastly, view doc_clustering.ipynb directly on Github at https://github.com/harrywang/document_cluster/blob/master/doc_clustering.ipynb or locally by running `ipython2 notebook` to learn the tutorial step-by-step.\r\n\r\n## Key Steps\r\n1. **Read data**: read titles, genres, synopses, rankings into four arrays\r\n2. **Tokenize and stem**: break paragraphs into sentences, then to words, stem the words (without removing stopwords) - each synopsis essentially becomes a bag of stemmed words.\r\n3. **Generate tf-idf matrix**: each row is a term (unigram, bigram, trigram...generated from the bag of words in 2.), each column is a synopsis.\r\n4. **Generate clusters**: based on the tf-idf matrix, 5 (or any number) clusters are generated using k-means. The top key terms are selected for each cluster.\r\n5. **Calculate similarity**: generate the cosine similarity matrix using the tf-idf matrix (100x100), then generate the distance matrix (1 - similarity matrix), so each pair of synopsis has a distance number between 0 and 1.\r\n6. **Plot clusters**: use multidimensional scaling (MDS) to convert distance matrix to a 2-dimensional array, each synopsis has (x, y) that represents their relative location based on the distance matrix. Plot the 100 points with their (x, y) using matplotlib.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}